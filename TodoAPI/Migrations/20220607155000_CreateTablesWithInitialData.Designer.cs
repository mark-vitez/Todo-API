// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TodoAPI.Migrations
{
    [DbContext(typeof(TodoDBContext))]
    [Migration("20220607155000_CreateTablesWithInitialData")]
    partial class CreateTablesWithInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TodoAPI.Data.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9792),
                            Name = "Shopping list"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 6, 6, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9823),
                            Name = "For today"
                        });
                });

            modelBuilder.Entity("TodoAPI.Data.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9920),
                            Description = "Milk",
                            Done = false,
                            ListId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9924),
                            Description = "Egg",
                            Done = false,
                            ListId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9926),
                            Description = "Butter",
                            Done = false,
                            ListId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9928),
                            Description = "Code",
                            Done = false,
                            ListId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9931),
                            Description = "Exercise",
                            Done = false,
                            ListId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2022, 6, 7, 18, 50, 0, 178, DateTimeKind.Local).AddTicks(9933),
                            Description = "Cook dinner",
                            Done = false,
                            ListId = 2
                        });
                });

            modelBuilder.Entity("TodoAPI.Data.TodoTask", b =>
                {
                    b.HasOne("TodoAPI.Data.TodoList", "List")
                        .WithMany("TodoTasks")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("TodoAPI.Data.TodoList", b =>
                {
                    b.Navigation("TodoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
